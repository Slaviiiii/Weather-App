{"ast":null,"code":"var _jsxFileName = \"D:\\\\Softuni\\\\Softuni Cources\\\\Projects\\\\Weather-App\\\\src\\\\components\\\\Header\\\\Search.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { AsyncPaginate } from 'react-select-async-paginate';\nimport { GEO_API_URL, geoApiOptions } from '../../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Search = () => {\n  _s();\n  const [search, setSearch] = useState(null);\n  const loadOptions = async inputValue => {\n    let data = [];\n    try {\n      const response = await fetch(`${GEO_API_URL}/cities?minPopulation=5000&namePrefix=${inputValue}`, geoApiOptions);\n      const res = await response.json();\n      let filteredData = res.data.filter((obj, index) => res.data.findIndex(item => item.name === obj.name) === index);\n      data = {\n        options: filteredData.map(x => {\n          return {\n            value: `${x.latitude} ${x.longitude}`,\n            label: `${x.name}, ${x.countryCode}`\n          };\n        })\n      };\n      return data;\n    } catch (err) {\n      console.log(err.message);\n    }\n  };\n  const handleOnChange = searchValue => {\n    setSearch(searchValue);\n  };\n  return /*#__PURE__*/_jsxDEV(AsyncPaginate, {\n    placeholder: \"Search for city\",\n    debounceTimeout: 600,\n    value: search,\n    onChange: handleOnChange,\n    loadOptions: loadOptions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n_s(Search, \"rZ+0pF47En10nDqJpRK7x4d9dB0=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["useState","AsyncPaginate","GEO_API_URL","geoApiOptions","jsxDEV","_jsxDEV","Search","_s","search","setSearch","loadOptions","inputValue","data","response","fetch","res","json","filteredData","filter","obj","index","findIndex","item","name","options","map","x","value","latitude","longitude","label","countryCode","err","console","log","message","handleOnChange","searchValue","placeholder","debounceTimeout","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Softuni/Softuni Cources/Projects/Weather-App/src/components/Header/Search.js"],"sourcesContent":["import { useState } from 'react'\r\nimport { AsyncPaginate } from 'react-select-async-paginate';\r\nimport { GEO_API_URL, geoApiOptions } from '../../api'\r\nexport const Search = () => {\r\n    const [search, setSearch] = useState(null);\r\n\r\n    const loadOptions = async (inputValue) => {\r\n        let data = [];\r\n        try {\r\n            const response = await fetch(`${GEO_API_URL}/cities?minPopulation=5000&namePrefix=${inputValue}`, geoApiOptions)\r\n            const res = await response.json();\r\n            let filteredData = res.data.filter((obj, index) => res.data.findIndex((item) => item.name === obj.name) === index);\r\n            data = {\r\n                options: filteredData.map(x => {\r\n                    return {\r\n                        value: `${x.latitude} ${x.longitude}`,\r\n                        label: `${x.name}, ${x.countryCode}`\r\n                    }\r\n                })\r\n            }\r\n            return data\r\n        }\r\n        catch (err) {\r\n            console.log(err.message)\r\n        }\r\n\r\n    }\r\n    const handleOnChange = (searchValue) => {\r\n        setSearch(searchValue)\r\n    }\r\n    return (\r\n        <AsyncPaginate\r\n            placeholder='Search for city'\r\n            debounceTimeout={600}\r\n            value={search}\r\n            onChange={handleOnChange}\r\n            loadOptions={loadOptions}\r\n        />\r\n    )\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,aAAa,QAAQ,6BAA6B;AAC3D,SAASC,WAAW,EAAEC,aAAa,QAAQ,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACtD,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMU,WAAW,GAAG,MAAOC,UAAU,IAAK;IACtC,IAAIC,IAAI,GAAG,EAAE;IACb,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEZ,WAAY,yCAAwCS,UAAW,EAAC,EAAER,aAAa,CAAC;MAChH,MAAMY,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACjC,IAAIC,YAAY,GAAGF,GAAG,CAACH,IAAI,CAACM,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAKL,GAAG,CAACH,IAAI,CAACS,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKJ,GAAG,CAACI,IAAI,CAAC,KAAKH,KAAK,CAAC;MAClHR,IAAI,GAAG;QACHY,OAAO,EAAEP,YAAY,CAACQ,GAAG,CAACC,CAAC,IAAI;UAC3B,OAAO;YACHC,KAAK,EAAG,GAAED,CAAC,CAACE,QAAS,IAAGF,CAAC,CAACG,SAAU,EAAC;YACrCC,KAAK,EAAG,GAAEJ,CAAC,CAACH,IAAK,KAAIG,CAAC,CAACK,WAAY;UACvC,CAAC;QACL,CAAC;MACL,CAAC;MACD,OAAOnB,IAAI;IACf,CAAC,CACD,OAAOoB,GAAG,EAAE;MACRC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;IAC5B;EAEJ,CAAC;EACD,MAAMC,cAAc,GAAIC,WAAW,IAAK;IACpC5B,SAAS,CAAC4B,WAAW,CAAC;EAC1B,CAAC;EACD,oBACIhC,OAAA,CAACJ,aAAa;IACVqC,WAAW,EAAC,iBAAiB;IAC7BC,eAAe,EAAE,GAAI;IACrBZ,KAAK,EAAEnB,MAAO;IACdgC,QAAQ,EAAEJ,cAAe;IACzB1B,WAAW,EAAEA;EAAY;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5B,CAAC;AAEV,CAAC;AAAArC,EAAA,CApCYD,MAAM;AAAAuC,EAAA,GAANvC,MAAM;AAAA,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}